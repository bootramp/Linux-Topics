Topics : 
- ISCSi
- LVM

In large data centers, they put devices called SAN Storage, which only has a hard drive inside .

Ref = https://cdn.ttgtmedia.com/rms/onlineImages/storage-san_diagram-f_mobile.png

Initiator Server ------ISCSi------> Target SAN 
                     FiberOptic
In this scenario, the server and SAN are kilometers away from each other.
We connect these two places by using optical fiber.
It happens that SAN disks can be accessed locally in the server.

In this scenario, we have two server : 1- Storage Server  2- Client
[CentOS] ---> # yum install targetcli -y
[Ubuntu] ---> # apt install targetcli-fb -y

[CentOS]
Start :----->

------------------- TargetCLI -------------------
# targetcli
# ls
(Tree Structure) 
o-/
  o- backstore
    o-
    
    
  o- iscsi
  
In the first step, we make the hard disk a member of the backstore.
# cd /backstore
# cd block
# create dev=/dev/sda name=disk1
> We defined *sda* in our own *backstore*
# ls
> Now we want to define an *iqn* or *name* for our server. If the client wants to look for this server, it will find it with this name .
# cd /
# cd /iscsi
# create iqn.2022-09.com.microsoft
> iscsi communication is done through port 3260. So we have to go to the firewall and open it
# cd iqn.2022-09.com.microsoft/tpg1/Portals
# ls
# delete 0.0.0.0 3260
We don't want it to respond to this protocol through all the server interfaces
# create <Server IP Address> 3260
> Now we have to publish this disk and give it to the client. So we have to define a LUN for it
# cd /iscsi/iqn.2022-09.com.microsoft/tpg1/luns
# create /backstore/block/disk1
# create LUN 0
> For quite
# cd /
# saveconfig
#exit
------------------- TargetCLI -------------------

Go to Firewall Configuration :
------------------- Firewall -------------------
# systemctl status firewalld
# firewall-cmd --permanent --add-service=iscsi-target
# firewall-cmd --permanent --add-port=3260/tcp
# firewall-cmd --reload
------------------- Firewall -------------------

# systemctl start target && systemctl enable target

-----------------------------------------------------------------------------

[Client Side]

[CentOS]

# yum install iscsi-initiator-utils -y

# systemctl start iscsid

> When the client wants to connect, it must do discovery first

# iscsiadm -m discovery -t st -p <Server IP Address>
If this text showing "192.168.0...:3260,1 iqn.2022 ......." it's mean can find server .
> Now must login in to the server :
# iscsiadm -m node -T iqn.2022...... -p <Server IP Address> -l
> At this moment, the following error occurs 
(iscsi login failed due to authorization failure)
> for solve this problem :
	1- Everyone can connect without authentication
	2- With authentication, only the authorized user can connect

1- 
------------------- Targetcli -------------------
# targetcli
# cd /iscsi/iqn.2022-09.com.microsoft/tpg1
> There are three attributes that we need to configure
# set attribute authentication=0
# set attribute generate_node_acls=<0 (Check All Acl roles) or 1 (Ignore All Roles)>
> For write permission :
# set attribute demo_mode_write_protect=0
# saveconfig
# exit
# systemctl restart target
------------------- Targetcli -------------------

The work is done, now we have to partition the disk like a local disk and install the file system on it and mount it.
> Can the client disconnect this connection ??
yes but first of all must unmount disk then insert this command :
# iscsiadm -m node -T iqn.2022-09.com.microsoft -p <Server IP Address> -u (-u is disconnect command)

*** Tip : If the new disk is published by the server, the client must disconnect and reconnect again .

> for add new disk to server :
------------------ Add new Disk ------------------
# targetcli
> cd /backstore/block
> create dev=/dev/sd? name=disk2
> cd /iscsi/iqn.2022-09.com.microsoft/tpg1/LUN
> create /backstore/block/disk2
> saveconfig
> exit
------------------ Add new Disk ------------------

# systemctl restart target

Now, Authorization :
2- 
------------------- Targetcli -------------------
